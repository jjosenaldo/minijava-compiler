// TODO: 
//      return false on error when building the symtable
//      add line numbers to the error messages (optional)
//      first add the class names then the methods and fields in order to check things like "Cat getNewCat(){}";
//      verify, in the method calls, if the left expression is an object
//      process extends
//      check, in an array access, if the left expression is an array
//      forbid that "new int" and the like be expressions
//      lookup the table *up to something*?
//      check the expressions used in the init value of fields (beware of loops!)

class Main{
    void main(String[] args){
        {{{{{{int a;{int a;}/*int a;*/}}}}}}
    }
}

class Cat{
    int a;
    void meow(void a, int b, String[] c/*, void b*/){
        int i = j.k()[1][1];
        void a = new a();
        //a a = ((((((((a.a())))))))[1]);
        int l = {{{1,1,1}}}[1][1][1];
        return;
        if(a==1+1)continue;break;;;
    }
    int c;
    int a;

    void meow2(){}
}

class IfElseTest{
    int a;
    Cat foo(){
        int b = m;
        if(1==1){
            int c = 5;
        } else{
            int c = 6;
        }

        while(true){
            c = 7;
        }
    }
}