// Adaptado de: https://www.baeldung.com/java-merge-sort

class Main{
    void main(String[] args){
        MergeSort sorter = new MergeSort();
        int[] v = {1,5,3,6,3,845,23,56};
        sorter.sort(v);

        int i = 0;
        while(i < v.length()){
            System.print(String.intToString(v[i]));
            i = i+1;
        }
    }
}

class MergeSort{
    void sort(int[] arr){
        this.mergeSort( arr , arr.length() );
    }

    void merge (int[] a, int[] l, int[] r, int left, int right) {
        int i = 0;
        int j = 0;
        int k = 0;

        while ((i < left) && (j < right)) {
            if (l[i] <= r[j]) {
                a[k] = l[i];
                i = i+1;
            }
            else {
                a[k] = r[j];
                j = j+1;
            }
            k = k+1;
        }
        while (i < left) {
            a[k] = l[i];
            k = k+1;
            i = i+1;
        }
        while (j < right) {
            a[k] = r[j];
            k = k+1;
            j = j+1;
        }
    }

    void mergeSort(int[] a, int n) {
        if (n < 2) {
            return;
        }
        int mid = n / 2;
        int[] l = new int[mid];
        int[] r = new int[n - mid];
    
        int i = 0;
        while(i < mid){
            l[i] = a[i];
            i = i+1;
        }

        while(i < n){
            r[i-mid] = a[i];
            i = i+1;
        }
    
        this.mergeSort(l, mid);
        this.mergeSort(r, n - mid);
    
        this.merge(a, l, r, mid, n - mid);
    }
}
