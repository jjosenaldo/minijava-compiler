goal : mainclass classdecs          
     ;

mainclass : CLASS ID '{' VOID ID '(' ID '[' ']' ID ')' '{' blockstmts '}' '}' 
          ;

classdecs : classdec classdecs      
          |                         
          ;

classdec : CLASS ID extendsopt '{' classmembers '}' 
         ;

classmembers : vardec classmembers 
             | methoddec classmembers
             |                      
             ;

vardec : type ID ';'                
       | type ID '=' expr ';'       
       ;

methoddec : type ID '(' params ')' '{' blockstmts '}'       
          ;

params : param paramsrest           
       |                            
       ;

paramsrest : ';' param paramsrest   
           |                        
           ;

param : type ID                     
      ;

extendsopt : EXTENDS ID             
           |                        
           ;

blockstmts : vardec blockstmts      
           | stmt blockstmts        
           |                        
           ;

stmt : '{' blockstmts '}'                             
     | IF '(' expr ')' stmt %prec PREC_ELSELESS_IF    
     | IF '(' expr ')' stmt ELSE stmt                 
     | WHILE '(' expr ')' stmt                        
     | expr '=' expr ';'                              
     | CONTINUE ';'                                   
     | BREAK ';'                                      
     | RETURN expr ';'                                
     | RETURN ';'                                     
     | expr '.' ID '(' exprlistopt ')'  ';'           
     ;

expr : expr '>' expr          
     | expr '<' expr           
     | expr GREAT_EQ expr      
     | expr LESS_EQ expr       
     | expr EQ expr            
     | expr DIFF expr          
     | expr OR expr            
     | expr AND expr           
     | expr '+' expr           
     | expr '-' expr           
     | expr '/' expr           
     | expr '*' expr           
     | expr '%' expr           
     | object filledbracks     
     | LIT_INT                
     | LIT_STR                
     | TRUE                   
     | FALSE                  
     | TOK_NULL               
     | object                 
     | '-' expr %prec PREC_UNARY_OP   
     | '!' expr %prec PREC_UNARY_OP   
     ;

type : type ARR 
     | BOOLEAN  
     | INT      
     | VOID     
     | ID       
     ;

object : NEW type                         
       | NEW ID '(' exprlistopt ')'       
       | ID                               
       | THIS '.' ID                      
       | THIS                             
       | expr '.' ID '(' exprlistopt ')'  
       | '(' expr ')'                     
       | '{' exprlist '}'                 
       ;

exprlist : expr ',' exprlist  
         | expr               
         ;

exprlistopt : exprlist  
            |           
            ;

filledbracks : filledbracks '[' expr ']'  
             | '[' expr ']'               
             ;